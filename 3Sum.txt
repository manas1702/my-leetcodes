class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());

        for(int i =0 ; i<nums.size();i++)
        {   if(i>0 && nums[i]==nums[i-1]) continue;//if after incrementing i we got a same value
            //the we wont consider it to avoid similar triplets
            int j = i+1;
            int k = nums.size()-1;
            while(j<k)
            {
                int sum = nums[i]+nums[j]+nums[k];
                if(sum<0) j++;
                else if (sum>0) k--;
                else
                {
                    vector<int> temp = {nums[i], nums[j], nums[k]};
                    ans.push_back(temp);
                    //after getting the result we will now move to update j and k
                    j++;
                    k--;
                    //now checking if the new value are same as the previous
                    //if they are we will again update j and k to avoid same triplets
                    while(j<k && nums[j]==nums[j-1]) j++;
                    while(j<k && nums[k]==nums[k+1]) k--;
                } 
            }
            
        }
        return ans;
        
    }
};